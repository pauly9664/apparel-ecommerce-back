{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts","webpack:///./src/app/validators/Number.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <!-- <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-title text-center style=\\\"font-weight: bold;\\\">Register</ion-title>\\r\\n  </ion-toolbar> -->\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <img src=\\\"/assets/PreetiLogo.png\\\" style=\\\"height:80px; width: 100px; margin-left: 40%;\\\" />\\r\\n  <div class=\\\"bg-image\\\"></div>\\r\\n  <div class=\\\"bg-text\\\">\\r\\n  <div class=\\\"styleInput\\\">\\r\\n    <form [formGroup]=\\\"credentialsForm\\\" (ngSubmit)=\\\"register()\\\" >\\r\\n      <ion-item class=\\\"curved\\\" lines=\\\"none\\\">\\r\\n        <ion-label position=\\\"fixed\\\" style=\\\"font-weight: bold;font-family: Open Sans\\\">Names</ion-label>\\r\\n        <input class=\\\"style-input\\\" type=\\\"text\\\" formControlName=\\\"names\\\" id=\\\"names\\\"/>    \\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"!credentialsForm.controls.names.valid && credentialsForm.controls.number.dirty\\\" lines=\\\"none\\\">\\r\\n        <p style=\\\"font-size: 0.8em;color:red\\\">Please enter a valid Username.</p>\\r\\n    </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"curved\\\" lines=\\\"none\\\">\\r\\n        <ion-label position=\\\"fixed\\\" style=\\\"font-weight: bold;font-family: Open Sans\\\">Phone Number <span style=\\\"font-size:0.8em\\\"></span>e.g<span style=\\\"color: pink; font-size:0.8em\\\"> 07XXXXXXXX</span>)</ion-label>\\r\\n        <input class=\\\"style-input\\\" type=\\\"tel\\\" formControlName=\\\"number\\\" [class.invalid]=\\\"!credentialsForm.controls.number.valid && credentialsForm.controls.number.dirty\\\"/>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"!credentialsForm.controls.number.valid && credentialsForm.controls.number.dirty \\\">\\r\\n        <p style=\\\"font-size: 0.8em;color:red\\\">Please enter a valid phone number(Should be 10 characters)</p>\\r\\n    </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"curved\\\" lines=\\\"none\\\">\\r\\n        <ion-label position=\\\"fixed\\\" style=\\\"font-weight: bold; font-family: Open Sans\\\">Email</ion-label>\\r\\n        <input class=\\\"style-input\\\" type=\\\"email\\\" formControlName=\\\"email\\\"/>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"!credentialsForm.controls.email.valid && credentialsForm.controls.number.dirty \\\">\\r\\n        <p style=\\\"font-size: 0.8em;color:red\\\">Please enter a valid email address.</p>\\r\\n    </ion-item>\\r\\n\\r\\n      <ion-item class=\\\"curved\\\"lines=\\\"none\\\" >\\r\\n        <ion-label position=\\\"fixed\\\" style=\\\"font-weight: bold;font-family: Open Sans\\\">Password</ion-label>\\r\\n        <input class=\\\"style-input\\\" type=\\\"password\\\" formControlName=\\\"password\\\"/>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"!credentialsForm.controls.password.valid && credentialsForm.controls.number.dirty \\\">\\r\\n        <p style=\\\"font-size: 0.8em;color:red\\\">Your password is too weak.</p>\\r\\n    </ion-item>\\r\\n\\r\\n      <ion-button size=\\\"small\\\" color=\\\"success\\\" style=\\\"color: #fff;\\\" [disabled]=\\\"!credentialsForm.valid\\\" (click)=\\\"register()\\\" >Register\\r\\n      </ion-button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <p style=\\\"color: #fff;font-family: Open Sans; font-size: small;\\\" tappable routerLink=\\\"/menu/login\\\">Already have an account? LOGIN</p>\\r\\n</div>\\r\\n</ion-content>\"","module.exports = \".curved {\\n  width: 100%; }\\n\\n.styleInput {\\n  width: 100%;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.bg-image {\\n  /* The image used */\\n  background-image: url(\\\"/assets/register3.jpg\\\");\\n  /* Add the blur effect */\\n  filter: blur(8px);\\n  -webkit-filter: blur(8px);\\n  /* Full height */\\n  height: 100%;\\n  /* Center and scale the image nicely */\\n  background-position: center; }\\n\\n.style-input {\\n  max-width: 50%; }\\n\\n.bg-text {\\n  background-color: black;\\n  /* Fallback color */\\n  background-color: rgba(0, 0, 0, 0.4);\\n  /* Black w/opacity/see-through */\\n  color: white;\\n  font-weight: bold;\\n  border: 3px solid #f1f1f1;\\n  position: absolute;\\n  top: 60%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  z-index: 2;\\n  width: 80%;\\n  padding: 20px;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvQzpcXFVzZXJzXFxBdHRhaW5cXGRlc2t0b3BcXHByb2plY3RzXFxhcHBhcmVsLWVjb21tZXJjZS9zcmNcXGFwcFxccmVnaXN0ZXJcXHJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLFdBQVcsRUFBQTs7QUFPZjtFQUNJLFdBQVc7RUFDWCxpQkFBZ0I7RUFDaEIsa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0ksbUJBQUE7RUFDQSw4Q0FBOEM7RUFFOUMsd0JBQUE7RUFDQSxpQkFBaUI7RUFDakIseUJBQXlCO0VBRXpCLGdCQUFBO0VBQ0EsWUFBWTtFQUVaLHNDQUFBO0VBQ0EsMkJBQTJCLEVBQUE7O0FBSS9CO0VBQ0ksY0FBYyxFQUFBOztBQUVsQjtFQUNJLHVCQUE0QjtFQUFFLG1CQUFBO0VBQzlCLG9DQUFpQztFQUFFLGdDQUFBO0VBQ25DLFlBQVk7RUFDWixpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztFQUNoQyxVQUFVO0VBQ1YsVUFBVTtFQUNWLGFBQWE7RUFDYixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4gICAgLmN1cnZlZCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLy8gaGVpZ2h0OiAxMDBweDtcclxuICAgICAgICAvLyAtbW96LWJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgICAgICAgLy8gLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgICAgIC8vYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIC8vICAgIG1hcmdpbi1ib3R0b206IDAuNmVtOyAgXHJcbiAgICB9XHJcbiAgICAuc3R5bGVJbnB1dCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7IFxyXG4gICAgICAgIG1hcmdpbi1sZWZ0OmF1dG87IFxyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bzsgXHJcbiAgICB9XHJcbiAgICAuYmctaW1hZ2Uge1xyXG4gICAgICAgIC8qIFRoZSBpbWFnZSB1c2VkICovXHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2Fzc2V0cy9yZWdpc3RlcjMuanBnXCIpO1xyXG4gICAgICBcclxuICAgICAgICAvKiBBZGQgdGhlIGJsdXIgZWZmZWN0ICovXHJcbiAgICAgICAgZmlsdGVyOiBibHVyKDhweCk7XHJcbiAgICAgICAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoOHB4KTtcclxuICAgICAgXHJcbiAgICAgICAgLyogRnVsbCBoZWlnaHQgKi9cclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIFxyXG4gICAgICAgIC8qIENlbnRlciBhbmQgc2NhbGUgdGhlIGltYWdlIG5pY2VseSAqL1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICAvLyBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgIC8vIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB9XHJcbiAgICAuc3R5bGUtaW5wdXR7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgICAgIH1cclxuICAgIC5iZy10ZXh0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBGYWxsYmFjayBjb2xvciAqL1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC40KTsgLyogQmxhY2sgdy9vcGFjaXR5L3NlZS10aHJvdWdoICovXHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIGJvcmRlcjogM3B4IHNvbGlkICNmMWYxZjE7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNjAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIH1cclxuICAgICJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { NumberValidator } from  '../validators/Number';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  validation_messages = {\r\n    'names': [\r\n        { type: 'required', message: 'Username is required.' },\r\n        { type: 'minlength', message: 'Username must be at least 5 characters long.' },\r\n      //   { type: 'maxlength', message: 'Username cannot be more than 25 characters long.' },\r\n      //   { type: 'pattern', message: 'Your username must contain only numbers and letters.' },\r\n      //   { type: 'validUsername', message: 'Your username has already been taken.' }\r\n      // ],\r\n      // 'name': [\r\n      //   { type: 'required', message: 'Name is required.' }\r\n      ],\r\n    \r\n     //more messages\r\n    }\r\n  credentialsForm: FormGroup;\r\n  constructor(public formBuilder: FormBuilder, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.credentialsForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      names: ['', [Validators.required, Validators.minLength(5), Validators.pattern('[a-zA-Z ]*')]],\r\n      number: ['', [Validators.required,Validators.minLength(10), Validators.maxLength(10), NumberValidator.isValid]]\r\n    });\r\n  }\r\n  register() {\r\n    this.authService.register(this.credentialsForm.value).subscribe(\r\n     res => {\r\n    //   //Call Login to automaticallyy login new user\r\n        this.authService.login(this.credentialsForm.value).subscribe();\r\n     }\r\n    );\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport class NumberValidator {\r\n\r\n    static isValid(control: FormControl): any {\r\n        \r\n\r\n        if(isNaN(control.value)){\r\n            return {\r\n                \"not a number\": true\r\n            };\r\n        }\r\n    }\r\n}"],"sourceRoot":""}